on:
  push:
    branches: 
    - main
    tags:
    - 'apply-develop-*'

name: Build and deploy develop

env:
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN: arn:aws:iam::858884198044:role/github_deployment_develop
  IMAGE_TAG: develop-${{ github.sha }}
  TASK_DEFINITION_FILE: develop/app-community/task-definition.json
  DEPLOY_REPO_NAME: simple-community-deploy
  DEPLOY_REPO_REF: refs/heads/develop
  GIT_USER_NAME: Deploy
  GIT_USER_EMAIL: yoshinori.satoh.tokyo@gmail.com
  SLACK_WEBHOOK: ${{ secrets.SIMPLE_COMMUNITY_DEV_SLACK_WEBHOOK }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      status: ${{ job.status }}
    strategy:
      matrix: # ビルドターゲットが増えたらmatrixを追従する
        include: 
        - target: release
          ecr_repository: simple-community-api-main
    steps:        
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: yoshinori-development/simple-community-actions-aws-creds@v1
      with: 
        aws_role_arn: ${{ env.AWS_ROLE_ARN }}
        aws_region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      id: build
      shell: bash
      run: |
        # 同じイメージタグを再度pushしないため、既にこのコミットのgit.shaのタグが付けられたイメージが存在していればスキップ
        IMAGE_URL=${{ steps.login-ecr.outputs.registry }}/${{ matrix.ecr_repository }}:${{ env.IMAGE_TAG }}
        docker pull $IMAGE_URL && true
        if [ "`docker image ls -q $IMAGE_URL`" ]; then
          echo "Image $IMAGE_URL already exist."
          echo "Skip build and push image."
          exit 0
        fi

        # ビルド & プッシュ
        DOCKER_BUILDKIT=1 docker build \
          --target ${{ matrix.target }} \
          -t $IMAGE_URL \
          .
        docker push $IMAGE_URL

  updateTaskDefinitions:
    name: UpdateTaskDefinitions
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      status: ${{ job.status }}
    steps:        
    - name: Configure AWS Credentials
      uses: yoshinori-development/simple-community-actions-aws-creds@v1
      with: 
        aws_role_arn: ${{ env.AWS_ROLE_ARN }}
        aws_region: ${{ env.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/${{ env.DEPLOY_REPO_NAME }}
        ref: ${{ env.DEPLOY_REPO_REF }}
        token: ${{ secrets.DEPLOY_PERSONAL_ACCESS_TOKEN }}

    # ビルドターゲットが増えたらここのタスク定義書き換えを追従する
    - name: update-task-definitions
      id: update-task-definitions
      env: 
        TARGET_RELEASE_ECR_REPOSITORY: simple-community-api-main
        TARGET_RELEASE_CONTAINER_NAME: api
      run: |
        # [Target]: release
        image=${{ steps.login-ecr.outputs.registry }}/${{ env.TARGET_RELEASE_ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        cat ${{ env.TASK_DEFINITION_FILE }} \
        | jq --arg image $image 'select(.containerDefinitions[].name == "${{ env.TARGET_RELEASE_CONTAINER_NAME }}").containerDefinitions[].image |= $image' \
        > tmp
        mv tmp ${{ env.TASK_DEFINITION_FILE }}

    - name: git push
      id: git-push
      run: |
        git config --local user.email ${{ env.GIT_USER_EMAIL }}
        git config --local user.name ${{ env.GIT_USER_NAME }}
        git branch
        git add ${{ env.TASK_DEFINITION_FILE }}
        git commit -m "[UpdateImageTag] ${{ github.event.repositories.name }} $GITHUB_SHA"
        git push

  slackNotification:
    if: always()
    needs: [build]
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ env.SLACK_WEBHOOK }}
